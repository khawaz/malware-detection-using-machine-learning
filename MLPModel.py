from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import confusion_matrix, accuracy_score
import pandas
import numpy


file = pandas.read_csv("TrainingData.csv")

features = file.drop("legitimate", axis=1)
labels = file["legitimate"]

features = numpy.array(features).reshape(-1,8)
labels = numpy.array(labels).reshape(-1,1)

features = MinMaxScaler().fit_transform(features)

features_train,features_test,label_train,label_test = train_test_split(features,labels,test_size =0.3,random_state=0)


# scores = []
#
# for i in range(1,9):
#     col = []
#     for j in range(1,9):
#         model = MLPClassifier(hidden_layer_sizes=(i,j), activation="logistic")
#         model.fit(features_train,label_train)
#         predictions = model.predict(features_test)
#         score = accuracy_score(label_test,predictions)
#         col.append(score)
#     scores.append(col)
#
# print(scores)
# print(max(max(scores)))
# print(scores.index(max(max(scores))))



model = MLPClassifier(hidden_layer_sizes=(6,3),activation="logistic")

model.fit(features_train,label_train)
predection = model.predict(features_test)

print(accuracy_score(label_test,predection)*100)
print(confusion_matrix(label_test,predection))

import pickle


pickle.dump(model, open('models/NNModel.pkl', 'wb'))

model = pickle.load(open('models/NNModel.pkl', 'rb'))
